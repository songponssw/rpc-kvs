// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: frontend_grpc.proto

package pb

import (
	context "context"
	reflect "reflect"
	sync "sync"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FrontendGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	OpId     uint32 `protobuf:"varint,2,opt,name=op_id,json=opId,proto3" json:"op_id,omitempty"`
	Key      string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *FrontendGetRequest) Reset() {
	*x = FrontendGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_grpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendGetRequest) ProtoMessage() {}

func (x *FrontendGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_grpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendGetRequest.ProtoReflect.Descriptor instead.
func (*FrontendGetRequest) Descriptor() ([]byte, []int) {
	return file_frontend_grpc_proto_rawDescGZIP(), []int{0}
}

func (x *FrontendGetRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *FrontendGetRequest) GetOpId() uint32 {
	if x != nil {
		return x.OpId
	}
	return 0
}

func (x *FrontendGetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type FrontendGetReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpId        uint32 `protobuf:"varint,1,opt,name=op_id,json=opId,proto3" json:"op_id,omitempty"`
	StorageFail bool   `protobuf:"varint,2,opt,name=storage_fail,json=storageFail,proto3" json:"storage_fail,omitempty"`
	Result      string `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FrontendGetReponse) Reset() {
	*x = FrontendGetReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_grpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendGetReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendGetReponse) ProtoMessage() {}

func (x *FrontendGetReponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_grpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendGetReponse.ProtoReflect.Descriptor instead.
func (*FrontendGetReponse) Descriptor() ([]byte, []int) {
	return file_frontend_grpc_proto_rawDescGZIP(), []int{1}
}

func (x *FrontendGetReponse) GetOpId() uint32 {
	if x != nil {
		return x.OpId
	}
	return 0
}

func (x *FrontendGetReponse) GetStorageFail() bool {
	if x != nil {
		return x.StorageFail
	}
	return false
}

func (x *FrontendGetReponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type FrontendPutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	OpId     uint32 `protobuf:"varint,2,opt,name=op_id,json=opId,proto3" json:"op_id,omitempty"`
	Key      string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Value    string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Delay    uint32 `protobuf:"varint,5,opt,name=delay,proto3" json:"delay,omitempty"`
}

func (x *FrontendPutRequest) Reset() {
	*x = FrontendPutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_grpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendPutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendPutRequest) ProtoMessage() {}

func (x *FrontendPutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_grpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendPutRequest.ProtoReflect.Descriptor instead.
func (*FrontendPutRequest) Descriptor() ([]byte, []int) {
	return file_frontend_grpc_proto_rawDescGZIP(), []int{2}
}

func (x *FrontendPutRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *FrontendPutRequest) GetOpId() uint32 {
	if x != nil {
		return x.OpId
	}
	return 0
}

func (x *FrontendPutRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *FrontendPutRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *FrontendPutRequest) GetDelay() uint32 {
	if x != nil {
		return x.Delay
	}
	return 0
}

type FrontendPutReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpId        uint32 `protobuf:"varint,1,opt,name=op_id,json=opId,proto3" json:"op_id,omitempty"`
	StorageFail bool   `protobuf:"varint,2,opt,name=storage_fail,json=storageFail,proto3" json:"storage_fail,omitempty"`
	Result      string `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FrontendPutReponse) Reset() {
	*x = FrontendPutReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontend_grpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontendPutReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontendPutReponse) ProtoMessage() {}

func (x *FrontendPutReponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontend_grpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontendPutReponse.ProtoReflect.Descriptor instead.
func (*FrontendPutReponse) Descriptor() ([]byte, []int) {
	return file_frontend_grpc_proto_rawDescGZIP(), []int{3}
}

func (x *FrontendPutReponse) GetOpId() uint32 {
	if x != nil {
		return x.OpId
	}
	return 0
}

func (x *FrontendPutReponse) GetStorageFail() bool {
	if x != nil {
		return x.StorageFail
	}
	return false
}

func (x *FrontendPutReponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

var File_frontend_grpc_proto protoreflect.FileDescriptor

var file_frontend_grpc_proto_rawDesc = []byte{
	0x0a, 0x13, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x58, 0x0a, 0x12, 0x46,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x13,
	0x0a, 0x05, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6f,
	0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x64, 0x0a, 0x12, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x6f,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6f, 0x70, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x61, 0x69, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x46,
	0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x12,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x13, 0x0a, 0x05, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x6f, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x64, 0x65, 0x6c,
	0x61, 0x79, 0x22, 0x64, 0x0a, 0x12, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x75,
	0x74, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x6f, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x46, 0x61, 0x69, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x90, 0x01, 0x0a, 0x08, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x41, 0x0a, 0x09, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x47,
	0x65, 0x74, 0x12, 0x18, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6d,
	0x61, 0x69, 0x6e, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x09, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x50, 0x75, 0x74, 0x12, 0x18, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x50,
	0x75, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2e,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_frontend_grpc_proto_rawDescOnce sync.Once
	file_frontend_grpc_proto_rawDescData = file_frontend_grpc_proto_rawDesc
)

func file_frontend_grpc_proto_rawDescGZIP() []byte {
	file_frontend_grpc_proto_rawDescOnce.Do(func() {
		file_frontend_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_frontend_grpc_proto_rawDescData)
	})
	return file_frontend_grpc_proto_rawDescData
}

var file_frontend_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_frontend_grpc_proto_goTypes = []interface{}{
	(*FrontendGetRequest)(nil), // 0: main.FrontendGetRequest
	(*FrontendGetReponse)(nil), // 1: main.FrontendGetReponse
	(*FrontendPutRequest)(nil), // 2: main.FrontendPutRequest
	(*FrontendPutReponse)(nil), // 3: main.FrontendPutReponse
}
var file_frontend_grpc_proto_depIdxs = []int32{
	0, // 0: main.Frontend.HandleGet:input_type -> main.FrontendGetRequest
	2, // 1: main.Frontend.HandlePut:input_type -> main.FrontendPutRequest
	1, // 2: main.Frontend.HandleGet:output_type -> main.FrontendGetReponse
	3, // 3: main.Frontend.HandlePut:output_type -> main.FrontendPutReponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_frontend_grpc_proto_init() }
func file_frontend_grpc_proto_init() {
	if File_frontend_grpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_frontend_grpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_grpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendGetReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_grpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendPutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontend_grpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontendPutReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_frontend_grpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_frontend_grpc_proto_goTypes,
		DependencyIndexes: file_frontend_grpc_proto_depIdxs,
		MessageInfos:      file_frontend_grpc_proto_msgTypes,
	}.Build()
	File_frontend_grpc_proto = out.File
	file_frontend_grpc_proto_rawDesc = nil
	file_frontend_grpc_proto_goTypes = nil
	file_frontend_grpc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FrontendClient is the client API for Frontend service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FrontendClient interface {
	HandleGet(ctx context.Context, in *FrontendGetRequest, opts ...grpc.CallOption) (*FrontendGetReponse, error)
	HandlePut(ctx context.Context, in *FrontendPutRequest, opts ...grpc.CallOption) (*FrontendPutReponse, error)
}

type frontendClient struct {
	cc grpc.ClientConnInterface
}

func NewFrontendClient(cc grpc.ClientConnInterface) FrontendClient {
	return &frontendClient{cc}
}

func (c *frontendClient) HandleGet(ctx context.Context, in *FrontendGetRequest, opts ...grpc.CallOption) (*FrontendGetReponse, error) {
	out := new(FrontendGetReponse)
	err := c.cc.Invoke(ctx, "/main.Frontend/HandleGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *frontendClient) HandlePut(ctx context.Context, in *FrontendPutRequest, opts ...grpc.CallOption) (*FrontendPutReponse, error) {
	out := new(FrontendPutReponse)
	err := c.cc.Invoke(ctx, "/main.Frontend/HandlePut", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FrontendServer is the server API for Frontend service.
type FrontendServer interface {
	HandleGet(context.Context, *FrontendGetRequest) (*FrontendGetReponse, error)
	HandlePut(context.Context, *FrontendPutRequest) (*FrontendPutReponse, error)
}

// UnimplementedFrontendServer can be embedded to have forward compatible implementations.
type UnimplementedFrontendServer struct {
}

func (*UnimplementedFrontendServer) HandleGet(context.Context, *FrontendGetRequest) (*FrontendGetReponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleGet not implemented")
}
func (*UnimplementedFrontendServer) HandlePut(context.Context, *FrontendPutRequest) (*FrontendPutReponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandlePut not implemented")
}

func RegisterFrontendServer(s *grpc.Server, srv FrontendServer) {
	s.RegisterService(&_Frontend_serviceDesc, srv)
}

func _Frontend_HandleGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FrontendGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendServer).HandleGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.Frontend/HandleGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendServer).HandleGet(ctx, req.(*FrontendGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Frontend_HandlePut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FrontendPutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FrontendServer).HandlePut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.Frontend/HandlePut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FrontendServer).HandlePut(ctx, req.(*FrontendPutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Frontend_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.Frontend",
	HandlerType: (*FrontendServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HandleGet",
			Handler:    _Frontend_HandleGet_Handler,
		},
		{
			MethodName: "HandlePut",
			Handler:    _Frontend_HandlePut_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "frontend_grpc.proto",
}
